---
import Header from "../../components/Header.astro";
export const prerender = true;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Coupon Swap Scheduler - Annie Liao</title>
  </head>
  <body class="bg-white">
    <Header />

    <!-- Main Content -->
    <main class="pt-20">
      <!-- Hero Section -->
      <section class="py-16 px-6 bg-gradient-to-br from-blue-50 to-indigo-100">
        <div class="max-w-4xl mx-auto">
          <h1 class="text-4xl md:text-5xl font-light text-gray-900 mb-6">
            Coupon Swap Scheduler Tool
          </h1>
          <p class="text-xl text-gray-700 leading-relaxed mb-8">
            Empowered the marketing team with self-service scheduling, reduced engineering intervention, and improved campaign flexibility.
          </p>
          
          <!-- Visual Tags -->
          <div class="flex flex-wrap gap-3">
            <span class="bg-blue-100 text-blue-800 text-sm font-medium px-3 py-1.5 rounded-full">React</span>
            <span class="bg-orange-100 text-orange-800 text-sm font-medium px-3 py-1.5 rounded-full">AWS Lambda</span>
            <span class="bg-purple-100 text-purple-800 text-sm font-medium px-3 py-1.5 rounded-full">EventBridge</span>
            <span class="bg-green-100 text-green-800 text-sm font-medium px-3 py-1.5 rounded-full">Node.js</span>
            <span class="bg-gray-100 text-gray-800 text-sm font-medium px-3 py-1.5 rounded-full">Internal Tool</span>
          </div>
        </div>
      </section>

      <!-- Project Details -->
      <section class="py-16 px-6">
        <div class="max-w-4xl mx-auto">
          <!-- Problem -->
          <div class="mb-12">
            <h2 class="text-2xl font-semibold text-gray-900 mb-4">Problem</h2>
            <p class="text-gray-700 leading-relaxed">
              The marketing and revenue teams relied on developers to manually
              update coupon configurations and promotional content, which is
              typically <strong>2 hours</strong> of manual work each week.
              This process was time-sensitive, error-prone, and created
              bottlenecks for campaigns requiring fast turnaround or scheduling
              ahead of time.
            </p>
          </div>

          <!-- Solution -->
          <div class="mb-12">
            <h2 class="text-2xl font-semibold text-gray-900 mb-4">Solution</h2>
            <p class="text-gray-700 leading-relaxed">
              I designed and built an internal coupon scheduler tool that
              automated the entire swap process using an event-driven
              architecture. This tool allowed non-engineering teams to schedule
              updates independently, reducing reliance on developers and
              minimizing operational friction.
            </p>
          </div>

          <!-- My Role -->
          <div class="mb-12">
            <h2 class="text-2xl font-semibold text-gray-900 mb-4">My Role</h2>
            <p class="text-gray-700 leading-relaxed mb-4">
              I led the frontend and backend development while collaborating closely with our DevOps
              engineer for AWS integration and deployment. My responsibilities
              included:
            </p>
            <ul class="space-y-2 text-gray-700 mb-6 ml-4">
              <li>
                • Designing and building a minimal internal UI for the revenue
                team.
              </li>
              <li>
                • Co-architecting the system using AWS EventBridge and Lambda.
              </li>
              <li>• Implementing scheduling logic and coupon updates.</li>
              <li>
                • Coordinating with the DevOps engineer on IAM policies,
                environment variable management, and optimizing the deployment
                pipeline.
              </li>
            </ul>
            <div class="bg-blue-50 p-4 rounded-lg">
              <p class="text-sm font-medium text-blue-900 mb-2">
                Key learnings:
              </p>
              <ul class="space-y-1 text-sm text-blue-800">
                <li>
                  • Deeper understanding of event-driven architecture and AWS
                  orchestration.
                </li>
                <li>• Balancing MVP backend functionality vs UI investment.</li>
                <li>
                  • Real-world lessons in multi-repo coordination and Lambda
                  quirks.
                </li>
              </ul>
            </div>
          </div>

          <!-- How It Works -->
          <div class="mb-12">
            <h2 class="text-2xl font-semibold text-gray-900 mb-4">
              How It Works
            </h2>

            <!-- Diagram -->
            <div class="mb-6">
              <h3 class="text-lg font-medium text-gray-800 mb-4">Diagram</h3>
              <div class="relative">
                <!-- Diagram recreated from the PNG -->
                <svg viewBox="0 0 1200 600" class="w-full h-auto">
                  <!-- Background sections -->
                  <rect
                    x="50"
                    y="50"
                    width="300"
                    height="500"
                    fill="#fef7e0"
                    stroke="#f59e0b"
                    stroke-width="2"
                    rx="10"></rect>
                  <rect
                    x="400"
                    y="50"
                    width="400"
                    height="500"
                    fill="#e0f2fe"
                    stroke="#0284c7"
                    stroke-width="2"
                    rx="10"></rect>
                  <rect
                    x="850"
                    y="50"
                    width="300"
                    height="500"
                    fill="#fdf2f8"
                    stroke="#ec4899"
                    stroke-width="2"
                    rx="10"></rect>

                  <!-- Section labels -->
                  <text
                    x="200"
                    y="40"
                    text-anchor="middle"
                    class="text-lg font-semibold"
                    fill="#7c2d12">BACKEND</text
                  >
                  <text
                    x="600"
                    y="40"
                    text-anchor="middle"
                    class="text-lg font-semibold"
                    fill="#0c4a6e">EVENTBRIDGE</text
                  >
                  <text
                    x="1000"
                    y="40"
                    text-anchor="middle"
                    class="text-lg font-semibold"
                    fill="#831843">LAMBDA</text
                  >

                  <!-- Backend Call -->
                  <rect
                    x="80"
                    y="280"
                    width="240"
                    height="80"
                    fill="white"
                    stroke="#6b7280"
                    stroke-width="2"
                    rx="8"></rect>
                  <text
                    x="200"
                    y="310"
                    text-anchor="middle"
                    class="text-md font-medium"
                    fill="#374151">Backend Call</text
                  >
                  <text
                    x="200"
                    y="330"
                    text-anchor="middle"
                    class="text-sm"
                    fill="#6b7280">(applyCouponSwapInEventBridge)</text
                  >

                  <!-- Event Bus -->
                  <rect
                    x="430"
                    y="280"
                    width="140"
                    height="60"
                    fill="white"
                    stroke="#6b7280"
                    stroke-width="2"
                    rx="8"></rect>
                  <text
                    x="500"
                    y="305"
                    text-anchor="middle"
                    class="text-md font-medium"
                    fill="#374151">Event Bus</text
                  >

                  <!-- EB Rules -->
                  <rect
                    x="430"
                    y="150"
                    width="160"
                    height="60"
                    fill="white"
                    stroke="#6b7280"
                    stroke-width="2"
                    rx="8"></rect>
                  <text
                    x="510"
                    y="175"
                    text-anchor="middle"
                    class="text-md font-medium"
                    fill="#374151">EB Rule: Scheduled</text
                  >

                  <rect
                    x="430"
                    y="380"
                    width="160"
                    height="60"
                    fill="white"
                    stroke="#6b7280"
                    stroke-width="2"
                    rx="8"></rect>
                  <text
                    x="510"
                    y="405"
                    text-anchor="middle"
                    class="text-md font-medium"
                    fill="#374151">EB Rule: Live</text
                  >

                  <!-- EB Scheduler -->
                  <rect
                    x="880"
                    y="150"
                    width="180"
                    height="60"
                    fill="white"
                    stroke="#6b7280"
                    stroke-width="2"
                    rx="8"></rect>
                  <text
                    x="970"
                    y="175"
                    text-anchor="middle"
                    class="text-md font-medium"
                    fill="#374151">EB Scheduler</text
                  >

                  <!-- Lambda Functions -->
                  <rect
                    x="880"
                    y="280"
                    width="240"
                    height="80"
                    fill="white"
                    stroke="#6b7280"
                    stroke-width="2"
                    rx="8"></rect>
                  <text
                    x="1000"
                    y="305"
                    text-anchor="middle"
                    class="text-md font-medium"
                    fill="#374151">applyCouponSwapLambda</text
                  >

                  <!-- Backend Endpoints -->
                  <rect
                    x="80"
                    y="450"
                    width="240"
                    height="60"
                    fill="white"
                    stroke="#6b7280"
                    stroke-width="2"
                    rx="8"></rect>
                  <text
                    x="200"
                    y="485"
                    text-anchor="middle"
                    class="text-md font-medium"
                    fill="#374151">Backend Endpoints</text
                  >

                  <!-- Arrows -->
                  <defs>
                    <marker
                      id="arrowhead"
                      markerWidth="10"
                      markerHeight="7"
                      refX="9"
                      refY="3.5"
                      orient="auto"
                    >
                      <polygon points="0 0, 10 3.5, 0 7" fill="#6b7280"
                      ></polygon>
                    </marker>
                  </defs>

                  <!-- Backend to Event Bus -->
                  <line
                    x1="320"
                    y1="320"
                    x2="430"
                    y2="310"
                    stroke="#6b7280"
                    stroke-width="2"
                    marker-end="url(#arrowhead)"></line>

                  <!-- Event Bus to EB Rules -->
                  <line
                    x1="500"
                    y1="280"
                    x2="510"
                    y2="210"
                    stroke="#6b7280"
                    stroke-width="2"
                    marker-end="url(#arrowhead)"></line>
                  <line
                    x1="500"
                    y1="340"
                    x2="510"
                    y2="380"
                    stroke="#6b7280"
                    stroke-width="2"
                    marker-end="url(#arrowhead)"></line>

                  <!-- EB Rule Scheduled to EB Scheduler -->
                  <line
                    x1="590"
                    y1="180"
                    x2="880"
                    y2="180"
                    stroke="#6b7280"
                    stroke-width="2"
                    marker-end="url(#arrowhead)"></line>

                  <!-- EB Scheduler to Lambda -->
                  <line
                    x1="970"
                    y1="210"
                    x2="970"
                    y2="280"
                    stroke="#6b7280"
                    stroke-width="2"
                    marker-end="url(#arrowhead)"></line>

                  <!-- EB Rule Live to Lambda -->
                  <line
                    x1="590"
                    y1="410"
                    x2="880"
                    y2="320"
                    stroke="#6b7280"
                    stroke-width="2"
                    marker-end="url(#arrowhead)"></line>

                  <!-- Lambda to Backend Endpoints -->
                  <polyline
                    points="970,360 970,480 400,480 320,480"
                    fill="none"
                    stroke="#6b7280"
                    stroke-width="2"
                    marker-end="url(#arrowhead)"></polyline>
                </svg>
              </div>

              <!-- Architecture Stack -->
              <div class="mb-6">
                <h3 class="text-lg font-medium text-gray-800 mb-3">
                  Architecture Stack
                </h3>
                <ul class="space-y-2 text-gray-700">
                  <li>
                    • <strong>AWS EventBridge</strong> – for rule-based and time-based
                    (scheduled) triggers.
                  </li>
                  <li>
                    • <strong>AWS Lambda</strong> – to handle logic for live and
                    scheduled coupon updates.
                  </li>
                  <li>
                    • <strong>Backend (Node.js)</strong> – internal function applyCouponSwapInEventBridge.
                  </li>
                  <li>
                    • <strong>Minimal Frontend UI</strong> – for internal team scheduling
                    (React).
                  </li>
                  <li>
                    • <strong>Statsig</strong> – for updating dynamic banner text.
                  </li>
                </ul>
              </div>

              <!-- Trade-offs -->
              <div class="mb-6">
                <h3 class="text-lg font-medium text-gray-800 mb-3">
                  Trade-offs
                </h3>
                <ul class="space-y-2 text-gray-700">
                  <li>
                    • Chose minimal UI and focused engineering time on backend
                    automation to meet short-term MVP goals.
                  </li>
                  <li>
                    • Used shared Yarn cache to minimize deployment time for
                    multiple Lambda functions.
                  </li>
                  <li>
                    • Managed shared logic and permissions across Lambdas
                    carefully to avoid IAM overreach and function duplication.
                  </li>
                </ul>
              </div>
            </div>

            <!-- Impact -->
            <div class="mb-12">
              <h2 class="text-2xl font-semibold text-gray-900 mb-4">Impact</h2>
              <ul class="space-y-2 text-gray-700 mb-6">
                <li>- Eliminated ~2 hours/week of manual developer time.</li>
                <li>
                  - Removed the need for ad-hoc reversals and urgent swaps.
                </li>
                <li>
                  - Empowered non-technical teams with self-service scheduling.
                </li>
                <li>
                  - Enabled faster experimentation with promotional campaigns.
                </li>
              </ul>
              <div
                class="bg-blue-50 border-l-4 border-blue-200 p-4 rounded-r-lg"
              >
                <p class="text-blue-800 italic">
                  "This saves us from bugging devs every week. Total
                  game-changer!" — Marketing Director
                </p>
              </div>
            </div>

            <!-- Reflection -->
            <div class="mb-12">
              <h2 class="text-2xl font-semibold text-gray-900 mb-4">
                Reflection
              </h2>
              <p class="text-gray-700 leading-relaxed mb-3">
                If I were to revisit this project:
              </p>
              <ul class="space-y-2 text-gray-700">
                <li>
                  • <strong>Improve the UI experience</strong> with real-time feedback and logs to help non-technical teammates feel more confident and reduce support questions.
                </li>
                <li>
                  • <strong>Simplify setup and permissions</strong> earlier to make handoff and future updates easier for the team.
                </li>
                <li>
                  • <strong>Explore more flexible backend workflows</strong> (like AWS Step Functions) if the logic grows so we can adapt faster without overcomplicating the system.
                </li>
              </ul>
            </div>
          </div>
        </div>

        <!-- Back Navigation -->
        <section class="py-12 px-6 bg-gray-50 border-t border-gray-200">
          <div class="max-w-4xl mx-auto text-center">
            <a
              href="/#work"
              class="inline-flex items-center text-blue-600 hover:text-blue-800 font-medium text-lg transition-colors duration-200"
            >
              <svg
                class="w-5 h-5 mr-2"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
              </svg>
              Back to All Projects
            </a>
            <p class="text-gray-600 mt-2">
              Explore more case studies and technical projects
            </p>
          </div>
        </section>
      </section>
    </main>
  </body>
</html>
